// <auto-generated />
using System;
using MedicationManagementApp.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MedicationManagementApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250623154629_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MedicationManagementApp.Models.Medication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Medications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Pain relief",
                            Name = "Paracetamol",
                            Quantity = 100
                        },
                        new
                        {
                            Id = 2,
                            Description = "Anti-inflammatory",
                            Name = "Ibuprofen",
                            Quantity = 50
                        },
                        new
                        {
                            Id = 3,
                            Description = "Antibiotic",
                            Name = "Amoxicillin",
                            Quantity = 80
                        },
                        new
                        {
                            Id = 4,
                            Description = "Sedative",
                            Name = "Diazepam",
                            Quantity = 30
                        },
                        new
                        {
                            Id = 5,
                            Description = "Diabetes treatment",
                            Name = "Metformin",
                            Quantity = 120
                        });
                });

            modelBuilder.Entity("MedicationManagementApp.Models.MedicationRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MedicationId")
                        .HasColumnType("integer");

                    b.Property<string>("PatientEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("MedicationId");

                    b.ToTable("MedicationRequests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Diagnosis = "Headache",
                            DoctorName = "Dr. Ilić",
                            MedicationId = 1,
                            PatientEmail = "ana@example.com",
                            PatientName = "Ana Petrović",
                            Quantity = 10,
                            RequestDate = new DateTime(2025, 6, 18, 15, 46, 29, 356, DateTimeKind.Utc).AddTicks(247)
                        },
                        new
                        {
                            Id = 2,
                            Diagnosis = "Inflammation",
                            DoctorName = "Dr. Kovač",
                            MedicationId = 2,
                            PatientEmail = "marko@example.com",
                            PatientName = "Marko Jovanović",
                            Quantity = 5,
                            RequestDate = new DateTime(2025, 6, 20, 15, 46, 29, 356, DateTimeKind.Utc).AddTicks(257)
                        },
                        new
                        {
                            Id = 3,
                            Diagnosis = "Infection",
                            DoctorName = "Dr. Janković",
                            MedicationId = 3,
                            PatientEmail = "ivana@example.com",
                            PatientName = "Ivana Lukić",
                            Quantity = 15,
                            RequestDate = new DateTime(2025, 6, 21, 15, 46, 29, 356, DateTimeKind.Utc).AddTicks(259)
                        },
                        new
                        {
                            Id = 4,
                            Diagnosis = "Anxiety",
                            DoctorName = "Dr. Petrović",
                            MedicationId = 4,
                            PatientEmail = "nikola@example.com",
                            PatientName = "Nikola Nikolić",
                            Quantity = 2,
                            RequestDate = new DateTime(2025, 6, 22, 15, 46, 29, 356, DateTimeKind.Utc).AddTicks(261)
                        },
                        new
                        {
                            Id = 5,
                            Diagnosis = "Diabetes",
                            DoctorName = "Dr. Ilić",
                            MedicationId = 5,
                            PatientEmail = "milica@example.com",
                            PatientName = "Milica Savić",
                            Quantity = 7,
                            RequestDate = new DateTime(2025, 6, 19, 15, 46, 29, 356, DateTimeKind.Utc).AddTicks(263)
                        },
                        new
                        {
                            Id = 6,
                            Diagnosis = "Fever",
                            DoctorName = "Dr. Nikolić",
                            MedicationId = 1,
                            PatientEmail = "jovan@example.com",
                            PatientName = "Jovan Stević",
                            Quantity = 140,
                            RequestDate = new DateTime(2025, 6, 21, 15, 46, 29, 356, DateTimeKind.Utc).AddTicks(265)
                        },
                        new
                        {
                            Id = 7,
                            Diagnosis = "Pain",
                            DoctorName = "Dr. Vuković",
                            MedicationId = 2,
                            PatientEmail = "sara@example.com",
                            PatientName = "Sara Đorđević",
                            Quantity = 4,
                            RequestDate = new DateTime(2025, 6, 22, 15, 46, 29, 356, DateTimeKind.Utc).AddTicks(267)
                        },
                        new
                        {
                            Id = 8,
                            Diagnosis = "Diabetes",
                            DoctorName = "Dr. Matić",
                            MedicationId = 5,
                            PatientEmail = "luka@example.com",
                            PatientName = "Luka Milić",
                            Quantity = 155,
                            RequestDate = new DateTime(2025, 6, 23, 15, 46, 29, 356, DateTimeKind.Utc).AddTicks(269)
                        });
                });

            modelBuilder.Entity("MedicationManagementApp.Models.MedicationRequest", b =>
                {
                    b.HasOne("MedicationManagementApp.Models.Medication", "Medication")
                        .WithMany()
                        .HasForeignKey("MedicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medication");
                });
#pragma warning restore 612, 618
        }
    }
}
